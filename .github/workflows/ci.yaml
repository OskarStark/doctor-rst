on:
    push:
        branches:
            - master
    pull_request:

name: CI

env:
    REQUIRED_PHP_EXTENSIONS: "ctype, filter, hash, iconv, json"

jobs:
    phpstan:
        name: PHPStan

        runs-on: ubuntu-latest

        steps:
            - name: "Checkout"
              uses: actions/checkout@v2

            - name: PHPStan
              uses: docker://oskarstark/phpstan-ga:0.12.8
              with:
                  args: analyse src/ --level=7

    php-cs-fixer:
        name: PHP-CS-Fixer

        runs-on: ubuntu-latest

        steps:
            - name: "Checkout"
              uses: actions/checkout@v2

            - name: PHP-CS-Fixer
              uses: docker://oskarstark/php-cs-fixer-ga:2.16.4
              with:
                  args: --diff --dry-run

    phpunit:
        name: PHPUnit

        runs-on: ubuntu-latest

        strategy:
            matrix:
                php-version:
                    - "7.4"

        steps:
            - name: "Checkout"
              uses: actions/checkout@v2

            - name: "Install PHP with extensions"
              uses: "shivammathur/setup-php@v2"
              with:
                  coverage: "none"
                  extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
                  php-version: "${{ matrix.php-version }}"
                  tools: composer:v2

            -   name: "Composer install"
                uses: "ramsey/composer-install@v1"
                with:
                    composer-options: "--no-scripts"

            - name: "Run unit tests via bin/phpunit"
              run: bin/phpunit

    auto-merge:
        name: "Auto-Merge"

        runs-on: "ubuntu-latest"

        needs:
            - "phpstan"
            - "php-cs-fixer"
            - "phpunit"

        if: >
            github.event_name == 'pull_request' &&
            github.event.pull_request.draft == false && (
              github.event.action == 'opened' ||
              github.event.action == 'reopened' ||
              github.event.action == 'synchronize'
            ) && (
              github.actor == 'dependabot[bot]'
            )

        steps:
            -   name: "Merge pull request"
                uses: "actions/github-script@v2"
                with:
                    github-token: "${{ secrets.GITHUB_TOKEN }}"
                    script: |
                        const pullRequest = context.payload.pull_request
                        const repository = context.repo

                        await github.pulls.merge({
                          merge_method: "merge",
                          owner: repository.owner,
                          pull_number: pullRequest.number,
                          repo: repository.repo,
                        })
